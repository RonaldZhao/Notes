================================= MySQL ========================================
MySQL初级必会知识点：
  *MySQL数据库的安装、配置和使用
  *MySQL账号的管理
  *创建、删除、修改数据表
  *数据表的索引
  *SQL语句的基本使用
  *常用的MySQL内置函数
  *SQL语句：
    1.SQL的增删改查基本操作
    2.SQL的条件查询
    3.查询中的order by
    4.查询中的group by和having子句
    5.子查询
管理数据库命令：
  1.查看数据库：show databases;
  2.创建数据库：create database 数据库名;
  3.使用数据库：use 数据库名;
  4.删除数据库：drop database 数据库名;
数据表管理命令：
  1.修改、添加、删除字段，字段改名，修改字段排列顺序，更改表名：
    *alter table 表名 modify 需要修改的字段 修改的类型;
    *alter table 表名 add 需要添加的新字段名 字段类型;
    *alter table 表名 drop 需要删除的字段;
    *alter table 表名 change 原来的字段名 新的字段名 新的字段类型;
    *alter table 表名 modify|add| 字段名 字段类型 first|after 字段名;
    *alter table 原数据表名 rename 新数据表名;
  2.创建有索引的表：
    create index 索引名 on 表名(列表);
    或者
    create table 表名 (index index1(id,name));
  3.插入数据：
    insert into 表名 (列表名)
      values(要插入的数据);
    或者
    insert into 表名 set 列表1=数据，列表2=数据;
  4.更新数据：
    update 表名 set 列名1=数据1,列名2=数据2,...[where clause];
  5.删除数据：
    delete from 表名 [where clause];
  6.查询数据：
    select 列名1,列名2 from 表名1,表名2[where clause];

================================= JDBC =========================================
JDBC初级必会知识点：
  *JDBC的主要API
  *JDBC连接数据库的过程
  *JDBC结果集的操作
  *JDBC批处理
  *事务

JDBC连接数据库的基本过程：
  1.加载驱动程序
  2.创建连接对象
  3.创建语句对象
  4.编写SQL语句
  5.使用语句对象执行SQL语句
  6.如果有结果集对结果集进行处理
  7.关闭结果集对象(如果有)，关闭语句对象，关闭连接对象

创建JDBC事务的步骤：
  1.设置事务的提交方式为非自动提交：conn.setAutoCommit(false);
  2.将需要添加事务的代码放入try，catch块中
  3.在try块中添加事务的提交操作，表示操作无异常，提交事务。
    conn.commit();
  4.在catch块中添加回滚事务，表示操作出现异常，撤销事务。
    conn.rollback();
  5.设置事务提交方式为自动提交。
    conn.setAutoCommit(true);

事务处理：
	事务概述：
		数据库是多用户使用的共享资源，当多个用户并发的存取数据的时候，在数据库中就会产生多个用户同时
		存取同一数据的情况，若不对并发加以控制，就容易产生读取和存数不正确的数据，破坏数据的一致性。
		而事务是并发控制的基本单位，它是一个操作序列，这些操作要么都执行，要么都不执行，是一个不可分
		割的工作单位。
	事务是数据库维护数据一致性的单位，在每个事务结束时，都能保持数据的一致性。
事务的四个特性：
	*原子性
	*一致性
	*隔离性
	*持久性
事务的语句：
	*开始事务：BEGIN TRANSACTION
	*提交事务：COMMIT TRANSACTION
	*回滚事务：ROLLBACK TRANSACTION
===============================MySQL&JDBC面试案例================================
1.在MySQL数据库中记录货币用什么字段类型好？
  使用NUMERIC或DECIMAL类型。这两种类型可以被用于保存对准确性和精度要求比较高的值，例如与货币
  有关的数据。当使用这两种类型声明一个数据表字段时，可以指定数据的精度和规模。例如：
  salary DECIMAL(9,2);
2.请简述项目中优化SQL语句执行效率的方法。
  1.尽量选择较小的列
  2.将where中用的比较频繁的字段建立索引
  3.select子句中避免使用‘*’
  4.避免在索引列上使用计算，not，in，和<>等操作
  5.当只需要一行数据的时候使用limit 1
  6.保证表单数据不超过200万条，适时分割表
3.事务是什么？
  事务是访问并可能更新数据库中各种数据项的一个程序执行单元。
  事务具有原子性、一致性、隔离性和持久性的特点。
  原子性指事务必须是原子工作单元。
  一致性是事务在完成时，必须使所有的数据都保持一致。
  隔离性是由并发事务所做的修改必须与任何其他并发事务的修改隔离。
  持久性是指事务完成之后，它对于系统的影响是永久性的。该修改即使出现系统故障也将一直保持。
4.在Java中如何创建一个JDBC连接？
  很简单，只需两步：
    1.注册并加载驱动：使用Class.forName(),驱动类就会注册到DriverManager里面并加载到内存里。
    2.用DriverManager获取连接对象：调用DriverManager.getConnection()方法并传入数据库连
      接的URL，用户名及密码，就能获取到连接对象。
5.有哪些不同的ResultSet？
  一共有三种ResultSet对象：
    1.ResultSet.TYPE_FORWARD_ONLY：只是默认的类型，它的游标只能往下移。
    2.ResultSet.TYPE_SCROLL_INSENSITIVE：游标可以上下移动，一旦它创建后，数据库里的数据
      再发生修改，对它来说是透明的。
    3.ResultSet.TYPE_SCROLL_SENSITIVE：游标可以上下移动，如果生成后数据库还发生了修改操
      作，，它是能够感知到的。
6.常见的JDBC异常有哪些？
  1.java.sql.SQLException：这是JDBC异常的基类。
  2.java.sql.BatchUpdateException：当批处理操作执行失败的时候可能会抛出这个异常。
  3.java.sql.SQLWarning：SQL操作出现的警告信息。
  4.java.sql.DataTruncation：字段值由于某些非正常原因被截断了（不是因为超过对应字段类型的
    长度限制）。
